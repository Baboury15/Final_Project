{"ast":null,"code":"import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport Main from './main';\n\nclass MyWindowPortal extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.containerEl = null;\n    this.externalWindow = null;\n  }\n\n  componentDidMount() {\n    // STEP 1: Create a new window, a div, and append it to the window. The div \n    // *MUST** be created by the window it is to be appended to (Edge only)\n    this.externalWindow = window.open('', '', 'width=600,height=400,left=200,top=200');\n    this.containerEl = this.externalWindow.document.createElement('div');\n    this.externalWindow.document.body.appendChild(this.containerEl);\n  }\n\n  componentWillUnmount() {\n    // STEP 2: This will fire when this.state.showWindowPortal in the parent component\n    // becomes false so we tidy up by just closing the window\n    this.externalWindow.close();\n  }\n\n  render() {\n    // STEP 3: The first render occurs before componentDidMount (where we open the\n    // new window) so container may be null, in this case render nothing.\n    if (!this.containerEl) {\n      return null;\n    } // STEP 4: Append props.children to the container <div> in the new window\n\n\n    return ReactDOM.createPortal(this.props.children, this.containerEl);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/baboury/Desktop/sport2/src/components/MyWindowPortal.js"],"names":["React","Switch","Route","ReactDOM","Main","MyWindowPortal","PureComponent","constructor","props","containerEl","externalWindow","componentDidMount","window","open","document","createElement","body","appendChild","componentWillUnmount","close","render","createPortal","children"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,cAAN,SAA6BL,KAAK,CAACM,aAAnC,CAAiD;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,WAAL,GAAmB,IAAnB;AACA,SAAKC,cAAL,GAAsB,IAAtB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACA;AACA,SAAKD,cAAL,GAAsBE,MAAM,CAACC,IAAP,CAAY,EAAZ,EAAgB,EAAhB,EAAoB,uCAApB,CAAtB;AACA,SAAKJ,WAAL,GAAmB,KAAKC,cAAL,CAAoBI,QAApB,CAA6BC,aAA7B,CAA2C,KAA3C,CAAnB;AACA,SAAKL,cAAL,CAAoBI,QAApB,CAA6BE,IAA7B,CAAkCC,WAAlC,CAA8C,KAAKR,WAAnD;AACD;;AAEDS,EAAAA,oBAAoB,GAAG;AACrB;AACA;AACA,SAAKR,cAAL,CAAoBS,KAApB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP;AACA;AACA,QAAI,CAAC,KAAKX,WAAV,EAAuB;AACrB,aAAO,IAAP;AACD,KALM,CAOP;;;AACA,WAAON,QAAQ,CAACkB,YAAT,CAAsB,KAAKb,KAAL,CAAWc,QAAjC,EAA2C,KAAKb,WAAhD,CAAP;AACD;;AA9B4C;;AAmCjD,eAAeL,IAAf","sourcesContent":["import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport Main from './main';\n\nclass MyWindowPortal extends React.PureComponent {\n    constructor(props) {\n      super(props);\n      this.containerEl = null;\n      this.externalWindow = null;\n    }\n  \n    componentDidMount() {\n      // STEP 1: Create a new window, a div, and append it to the window. The div \n      // *MUST** be created by the window it is to be appended to (Edge only)\n      this.externalWindow = window.open('', '', 'width=600,height=400,left=200,top=200');\n      this.containerEl = this.externalWindow.document.createElement('div');\n      this.externalWindow.document.body.appendChild(this.containerEl);\n    }\n  \n    componentWillUnmount() {\n      // STEP 2: This will fire when this.state.showWindowPortal in the parent component\n      // becomes false so we tidy up by just closing the window\n      this.externalWindow.close();\n    }\n  \n    render() {\n      // STEP 3: The first render occurs before componentDidMount (where we open the\n      // new window) so container may be null, in this case render nothing.\n      if (!this.containerEl) {\n        return null;\n      } \n  \n      // STEP 4: Append props.children to the container <div> in the new window\n      return ReactDOM.createPortal(this.props.children, this.containerEl);  \n    }\n  }\n\n\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}